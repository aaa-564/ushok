Задача 1
Начало кода
*Исходная строка
str_1 = 'AaBbCcDd'

*Получаем строку с заглавными буквами (с шагом 2, начиная с 0 индекса)
uppercase_str = str_1[::2]
*Получаем строку со строчными буквами (с шагом 2, начиная с 1 индекса)
lowercase_str = str_1[1::2]
*Выводим результаты
print("Заглавные буквы:", uppercase_str)
print("Строчные буквы:", lowercase_str)



Задача 2
Начало кода 
*Исходный список
li = ['a', '1', 'b', '2', 'c', '3']
*Получаем списки с буквами (четные индексы) и числами (нечетные индексы)
li_1 = li[0::2]  # буквы
li_2 = li[1::2]  # числа
*Удаляем исходный список
del li
*Выводим полученные списки
print(li_1)
print()
print(li_2)

Стек
def check_is_balanced(expression):
    # Инициализация стека
    stack = []
    # Проходим по каждому символу в строке
    for symbol in expression:
        # Смотрим, открывающий или закрывающий
        # Если символ открывающий
        if symbol == "(":
            # Добавляем его в стек
            stack.append(symbol)
        # Если символ закрывающий
        elif symbol == ")":
            # Пытаемся достать из стека последний элемент
            # Если стек пуст, значит для закрывающего не нашлось открывающего
            # Значит баланса нет, возвращаем False
            if not stack:
                return False
            stack.pop()

    # Проверяем, что стек пуст
    # Если в стеке остались элементы, то не все открывающие скобки закрыты,
    # а значит баланса нет
    return len(stack) == 0
