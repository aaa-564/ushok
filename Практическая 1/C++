Задача 1
#include <iostream>
#include <map>
#include <vector>
#include <string>

int main() {
    // Создаем словарь
    std::map<std::string, std::string> student;
    student["name"] = "Артём";
    student["age"] = "20";
    student["courses"] = "математика, информатика"; // Storing courses as a single string for simplicity

    // Добавляем новый ключ-значение
    student["grade"] = "4";

    // Выводим словарь
    for (const auto& pair : student) {
        std::cout << pair.first << ": " << pair.second << std::endl;
    }

    // Изменяем значение по ключу
    student["age"] = "19";

    // Удаляем ключ-значение
    student.erase("grade");

    // Выводим обновленный словарь
    for (const auto& pair : student) {
        std::cout << pair.first << ": " << pair.second << std::endl;
    }

    return 0;
}


Задача 2 
#include <iostream>
#include <list>
using namespace std;

int main() {
    list<int> nums = {1, 2, 3, 4, 5, 6, 7};

    for (auto it = nums.begin(); it != nums.end(); ) {
        if (*it % 2 == 0)
            it = nums.erase(it); 
        else
            ++it;
    }

    cout << "Список после удаления четных элементов: ";
    for (int x : nums) {
        cout << x << " ";
    }
    return 0;
}

стек
#include <iostream>
#include <stack>

int main() {
    // 1. Создание стека
    std::stack<int> myStack;

    // 2. Добавление элементов в стек (push)
    myStack.push(10);
    myStack.push(20);
    myStack.push(30);

    std::cout << "Элементы стека (сверху вниз):" << std::endl;

    // 3. Извлечение и вывод элементов из стека (pop)
    while (!myStack.empty()) {
        // Получаем верхний элемент
        int topElement = myStack.top();
        std::cout << topElement << std::endl;
        // Удаляем верхний элемент
        myStack.pop();
    }

    // Проверка на пустоту стека
    if (myStack.empty()) {
        std::cout << "Стек пуст." << std::endl;
    }

    return 0;
}
