
#include <iostream>
#include <vector>

// Функция слияния двух отсортированных подмассивов
void merge(std::vector<int>& arr, int left, int mid, int right) {
    int n1 = mid - left + 1; // Размер левого подмассива
    int n2 = right - mid;    // Размер правого подмассива

    // Создаем временные векторы для левого и правого подмассивов
    std::vector<int> leftArr(n1);
    std::vector<int> rightArr(n2);

    // Копируем данные во временные векторы
    for (int i = 0; i < n1; i++)
        leftArr[i] = arr[left + i];
    for (int j = 0; j < n2; j++)
        rightArr[j] = arr[mid + 1 + j];

    // Сливаем временные векторы обратно в arr[left..right]
    int i = 0; // Индекс для левого подмассива
    int j = 0; // Индекс для правого подмассива
    int k = left; // Индекс для объединенного массива

    while (i < n1 && j < n2) {
        if (leftArr[i] <= rightArr[j]) {
            arr[k] = leftArr[i];
            i++;
        } else {
            arr[k] = rightArr[j];
            j++;
        }
        k++;
    }

    // Копируем оставшиеся элементы левого подмассива (если есть)
    while (i < n1) {
        arr[k] = leftArr[i];
        i++;
        k++;
    }

    // Копируем оставшиеся элементы правого подмассива (если есть)
    while (j < n2) {
        arr[k] = rightArr[j];
        j++;
        k++;
    }
}

// Основная функция сортировки слиянием
void mergeSort(std::vector<int>& arr, int left, int right) {
    if (left < right) {
        // Находим середину
        int mid = left + (right - left) / 2; // Избегаем переполнения

        // Рекурсивно сортируем левую и правую половины
        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);

        // Сливаем отсортированные половины
        merge(arr, left, mid, right);
    }
}

// Функция для вывода массива
void printArray(const std::vector<int>& arr) {
    for (int num : arr) {
        std::cout << num << " ";
    }
    std::cout << std::endl;
}

int main() {
    std::vector<int> array = {38, 27, 43, 3, 9, 82, 10};

    std::cout << "Исходный массив: ";
    printArray(array);

    // Вызываем сортировку слиянием
    mergeSort(array, 0, array.size() - 1);

    std::cout << "Отсортированный массив: ";
    printArray(array);

    return 0;
}
